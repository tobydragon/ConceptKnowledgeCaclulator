{
  "name" : "COMP 220",
  "concepts" : [
    {"id" : "Comparing Data Structures"},
    {"id" : "Interfaces"},


    {"id" : "Abstract Data Types"},
    {"id" : "Stack"},
    {"id" : "Queue"},
    {"id" : "List"},
    {"id" : "Object Oriented Programming"},

    {"id" : "Data Structure Implementations"},
    {"id" : "Array"},
    {"id" : "Linked Nodes"},

    {"id" : "Pointers"},
    {"id" : "Dangling Pointers"},
    {"id" : "Stack vs. Heap"},
    {"id" : "Memory Leak"},
    {"id" : "Pass by Pointer"},
    {"id" : "Deep vs. Shallow Copies"},
    {"id" : "Pass by Value"},
    {"id" : "Pass by Reference"},
    {"id" : "Copy Constructor, Destructor, Assignment Operator"},

    {"id" : "Search"},
    {"id" : "Sort"},
    {"id" : "Recursion"},

    {"id" : "Testing Time Efficiency"}

  ],
  "links" : [
    {
      "parent" : "Comparing Data Structures",
      "child" : "Abstract Data Types"
    }, {
      "parent" : "Interfaces",
      "child" : "Abstract Data Types"
    }, {
      "parent" : "Comparing Data Structures",
      "child" : "Data Structure Implementations"
    },

    {
      "parent" : "Abstract Data Types",
      "child" : "Stack"
    }, {
      "parent" : "Abstract Data Types",
      "child" : "Queue"
    }, {
      "parent" : "Abstract Data Types",
      "child" : "List"
    },

    {
      "parent" : "Data Structure Implementations",
      "child" : "Array"
    }, {
      "parent" : "Data Structure Implementations",
      "child" : "Linked Nodes"
    }, {
      "parent" : "Array",
      "child" : "Pointers"
    }, {
      "parent" : "Linked Nodes",
      "child" : "Pointers"
    },

    {
      "parent" : "Pointers",
      "child" : "Dangling Pointers"
    }, {
      "parent" : "Pointers",
      "child" : "Memory Leak"
    }, {
      "parent" : "Pointers",
      "child" : "Pass by Pointer"
    }, {
      "parent" : "Stack vs. Heap",
      "child" : "Pointers"
    },{
      "parent" : "Pass by Reference",
      "child" : "Stack vs. Heap"
    },{
      "parent" : "Pass by Reference",
      "child" : "Pointers"
    },{
      "parent" : "Deep vs. Shallow Copies",
      "child" : "Pass by Value"
    },{
      "parent" : "Deep vs. Shallow Copies",
      "child" : "Pass by Reference"
    },{
      "parent" : "Deep vs. Shallow Copies",
      "child" : "Stack vs. Heap"
    },{
      "parent" : "Copy Constructor, Destructor, Assignment Operator",
      "child" : "Deep vs. Shallow Copies"
    },{
      "parent" : "Object Oriented Programming",
      "child" : "Copy Constructor, Destructor, Assignment Operator"
    },{
      "parent" : "Abstract Data Types",
      "child" : "Object Oriented Programming"
    },

    {
      "parent" : "Comparing Data Structures",
      "child" : "Testing Time Efficiency"
    }, {
      "parent" : "Search",
      "child" : "Testing Time Efficiency"
    }, {
      "parent" : "Sort",
      "child" : "Testing Time Efficiency"
    }, {
      "parent" : "Search",
      "child" : "Recursion"
    }, {
      "parent" : "Sort",
      "child" : "Recursion"
    }, {
      "parent" : "Search",
      "child" : "Array"
    }, {
      "parent" : "Sort",
      "child" : "Array"
    }, {
      "parent" : "Linked Nodes",
      "child" : "Recursion"
    } ]
}